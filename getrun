#!/bin/bash

usage()
{
    echo -e "Usage: $(basename "$0") <nd>
        <nd> Required. Hostname or IP-address of ND
        (-u|--username) <username>. Optional. Will use name from ssh config, if not specified
        (-d|--device-os) [ios,nxos,junos,routeros,eltex]. Optional. Default: ios
        (-c|--config-type) [running,startup], only for IOS/NXOS, Optional. Default: running
        (-o|--output-file) Output file. Optional. Will autogenerate name, if not specified"
        1>&2
}

OPTIONS=u:d:c:o:
LONGOPTIONS=username:,device-type:,config-type:,output-file:
PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTIONS --name "$0" -- "$@")

if [[ $? -ne 0 ]]; then
    usage
    exit 1
fi

# Replace arguments with generated by getopt
eval set -- "$PARSED"

# Process arguments and set variables
while true; do
    case "$1" in
        -u|--username)
            USERNAME=$2
            shift 2
            ;;
        -d|--device-os)
            # ${x,,} - convert string $x in lowercase
            DEVICE_OS=${2,,}
            shift 2
            ;;
        -c|--config-type)
            # ${x,,} - convert string $x in lowercase
            CONFIG_TYPE=${2,,}
            shift 2
            ;;
        -o|--output-file)
            OUTPUT_FILE=$2
            shift 2
            ;;
        '--')
            # End of option args, positional parameter followed after '--' in getopt output
            shift
            break
            ;;
        *)
            usage
            exit 1
            ;;
    esac
done

# Check for mandatory arguments and exit if not specified
if [ -z "$1" ]; then
    usage
    exit 1
else
    DEVICE=$1
fi

# Set defaults
[ "$DEVICE_OS" ] || DEVICE_OS="ios"
[ "$CONFIG_TYPE" ] || CONFIG_TYPE="running"
[ "$OUTPUT_FILE" ] || OUTPUT_FILE=${DEVICE}_$(date +%Y-%m-%d_%H-%M-%S).conf
[ "$USERNAME" ] && USERNAME="${USERNAME}@" || USERNAME=""

# Remove empty output file if Ctrl-C pressed during password request
trap '[ -f "${OUTPUT_FILE}" ] && [ ! -s "${OUTPUT_FILE}" ] && rm "${OUTPUT_FILE}"' SIGINT

# Save configuration in output file
case "$DEVICE_OS" in
    ios)
        scp -q ${USERNAME}${DEVICE}:${CONFIG_TYPE}-config ${OUTPUT_FILE} #2>/dev/null
        ;;
    nxos)
        ssh ${USERNAME}${DEVICE} "show ${CONFIG_TYPE}-config | no-more" >${OUTPUT_FILE}
        ;;
    junos)
        scp -q ${USERNAME}${DEVICE}:/config/juniper.conf.gz ${OUTPUT_FILE}.gz && gzip -dq ${OUTPUT_FILE}.gz
        ;;
    routeros)
        ssh ${USERNAME}${DEVICE} "/export terse show-sensitive" >${OUTPUT_FILE}
        ;;
    eltex)
        ssh ${USERNAME}${DEVICE} "show running-config" >${OUTPUT_FILE}
        ;;
    *)
        echo 'Unknown device OS!' >&2
        usage
        exit 1
        ;;
esac

echo "Config saved in ${OUTPUT_FILE}."
